"""
The drawings to display in the game, and two functions for drawing walls in the 
map with the block character.

The drawings are stored in dictionaries, with keys corresponding to the state
of the object, and the values lists of strings, which enables the drawings to
be displayed line by line.
"""
from heist.constants import Colors as colors

def draw_box(win, y, x, height, width, char='█', color=0):
    """Draw a filled rectangle with the block character with given coordinates , height, and width"""
    for i in range(height):
        for j in range(width):
            win.addch(y + i, x + j, char, color)


def draw_outline(win, y, x, height, width, char='█', color=0):
    """Draw the outline of a rectangle with the block character with given coordinates , height, and width"""
    draw_box(win, y, x, 1, width, char, color)
    draw_box(win, y + 1, x, height - 2, 2, char, color)
    draw_box(win, y + 1, x + width - 2, height - 2, 2, char, color)
    draw_box(win, y + height - 1, x, 1, width, char, color)

def draw_route(win, y, x, height, width, direction):
    """Draw the route of the patroller"""
    if direction == 'vertical':
        draw_box(win, y, x, height, width, char='┊', color=colors.RED_BLACK)
    if direction == 'horizontal':
        draw_box(win, y, x, height, width, char='┄', color=colors.RED_BLACK)


title = {
  'static': (
    '░░░░█████████    ░░░░█████████████░░░░█████████████░░░░████░░░░░████',
    '░░░░█████████    ░░░░█████████████░░░░█████████████░░░░████░░░░░████',
    '░░░░████     ████░░░░████     ████░░░░████     ████░░░░████░░░░░████',
    '░░░░████     ████░░░░████     ████░░░░████     ████░░░░████░░░░░████',
    '░░░░█████████    ░░░░█████████████░░░░████░░░░░████░░░░█████████    ',
    '░░░░█████████    ░░░░█████████████░░░░████░░░░░████░░░░█████████    ',
    '░░░░████     ████░░░░████     ████░░░░████░░░░░████░░░░████     ████',
    '░░░░████     ████░░░░████     ████░░░░████░░░░░████░░░░████     ████',
    '░░░░█████████░░░░░░░░████░░░░░████░░░░████░░░░░████░░░░████░░░░░████',
    '░░░░█████████░░░░░░░░████░░░░░████░░░░████░░░░░████░░░░████░░░░░████',
    '░░░░         ░░░░░░░░    ░░░░░    ░░░░    ░░░░░    ░░░░    ░░░░░    ',
    '░░░░         ░░░░░░░░    ░░░░░    ░░░░    ░░░░░    ░░░░    ░░░░░    ',
    '░░░░████░░░░████░░░░████████████░░░░████████████░░░░████████████░░░░████████████',
    '░░░░████░░░░████░░░░████████████░░░░████████████░░░░████████████░░░░████████████',
    '░░░░████░░░░████░░░░████        ░░░░    ████    ░░░░████        ░░░░    ████    ',
    '░░░░████░░░░████░░░░████        ░░░░    ████    ░░░░████        ░░░░    ████    ',
    '░░░░████████████░░░░████████████░░░░░░░░████░░░░░░░░████████████░░░░░░░░████░░░░',
    '░░░░████████████░░░░████████████░░░░░░░░████░░░░░░░░████████████░░░░░░░░████░░░░',
    '░░░░████    ████░░░░████        ░░░░░░░░████░░░░░░░░        ████░░░░░░░░████░░░░',
    '░░░░████    ████░░░░████        ░░░░░░░░████░░░░░░░░        ████░░░░░░░░████░░░░',
    '░░░░████░░░░████░░░░████████████░░░░████████████░░░░████████████░░░░░░░░████░░░░',
    '░░░░████░░░░████░░░░████████████░░░░████████████░░░░████████████░░░░░░░░████░░░░',
    '░░░░    ░░░░    ░░░░            ░░░░            ░░░░            ░░░░░░░░    ░░░░',
    '░░░░    ░░░░    ░░░░            ░░░░            ░░░░            ░░░░░░░░    ░░░░',
  )
  }

tutorial_text_1 = {
  'static' : (
    '       ┏━━━┓ ┏━━━┓ ┏━━━┓ ┏━━━┓                                     ┏━━━┓',
    ' Press ┃ ← ┃ ┃ ↑ ┃ ┃ → ┃ ┃ ↓ ┃ to move. To go to pause menu, press ┃ Q ┃. Walk onto SAFES to open them and score.',
    '       ┗━━━┛ ┗━━━┛ ┗━━━┛ ┗━━━┛                                     ┗━━━┛',
    ' Keep away from PARTOLLERS. Luckily, they only move back and forth on the routes shown at the start of each level.',
    ''
  )
}

tutorial_text_2 = {
  'static' : (
    '       ┏━━━┓',
    ' Press ┃ X ┃ to interact when facing DOORS or CAMERAS. Try to open ALL safes, and move to the EXIT in less turns.',
    '       ┗━━━┛',
    ' If you are seen by cameras (\'◩◁\' → \'▧⯇\'), the patroller will move 2x faster. Cameras can be broken (\'░░\')from the back.',
    ''
  )
}

turn_counter = {
  'static': (
    '░▀█▀░█░█░█▀▄░█▀█░░░░',
    '░░█░░█░█░█▀▄░█░█░░▀░',
    '░░▀░░▀▀▀░▀░▀░▀░▀░░▀░'
  )
  }

cash_counter = {
  'static': (
    '░█▀▀░█▀█░█▀▀░█░█░░░░',
    '░█░░░█▀█░▀▀█░█▀█░░▀░',
    '░▀▀▀░▀░▀░▀▀▀░▀░▀░░▀░'
  )
  }

score_counter = {
  'static': (
    '░█▀▀░█▀▀░█▀█░█▀▄░█▀▀░░░░',
    '░▀▀█░█░░░█░█░█▀▄░█▀▀░░▀░',
    '░▀▀▀░▀▀▀░▀▀▀░▀░▀░▀▀▀░░▀░'
  )
}
display_number = {
    1: (
      '░▀█░',
      '░░█░',
      '░▀▀▀'
    ),
    2: (
      '░▀▀▄',
      '░▄▀░',
      '░▀▀▀'
    ),
    3: (
      '░▀▀█',
      '░░▀▄',
      '░▀▀░'
    ),
    4: (
      '░█░█',
      '░░▀█',
      '░░░▀'
    ),
    5: (
      '░█▀▀',
      '░▀▀▄',
      '░▀▀░'
    ),
    6: (
      '░▄▀▀',
      '░█▀▄',
      '░░▀░'
    ),
    7: (
      '░▀▀█',
      '░▄▀░',
      '░▀░░'
    ),
    8: (
      '░▄▀▄',
      '░▄▀▄',
      '░░▀░'
    ),
    9: (
      '░▄▀▄',
      '░░▀█',
      '░▀▀░'
    ),
    0: (
      '░▄▀▄',
      '░█/█',
      '░░▀░'
    )
  }

warning = {
  'static': (
    '┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓'
    '┃   The terminal window is too small.   ┃'
    '┃   Please maximize and retry.          ┃'
    '┃   Press any key to quit.              ┃'
    '┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛'    
  )
}

notice_win = {
  'static': (
    '░█▀▀░█░█░█▀▀░█▀▀░█▀▀░█▀▀░█▀▀░█',
    '░▀▀█░█░█░█░░░█░░░█▀▀░▀▀█░▀▀█░▀',
    '░▀▀▀░▀▀▀░▀▀▀░▀▀▀░▀▀▀░▀▀▀░▀▀▀░▀'  
  )
}

notice_escape = {
  'static': (
    '░▀█▀░█▀▄░█░█░░░▀█▀░█▀█░░░█▀█░█▀█░█▀▀░█▀█░░░█▀█░█░░░█░░░░░▀█▀░█░█░█▀▀░░░█▀▀░█▀█░█▀▀░█▀▀░█▀▀░█',
    '░░█░░█▀▄░░█░░░░░█░░█░█░░░█░█░█▀▀░█▀▀░█░█░░░█▀█░█░░░█░░░░░░█░░█▀█░█▀▀░░░▀▀█░█▀█░█▀▀░█▀▀░▀▀█░▀',
    '░░▀░░▀░▀░░▀░░░░░▀░░▀▀▀░░░▀▀▀░▀░░░▀▀▀░▀░▀░░░▀░▀░▀▀▀░▀▀▀░░░░▀░░▀░▀░▀▀▀░░░▀▀▀░▀░▀░▀░░░▀▀▀░▀▀▀░▀'
  )
}
notice_lose = {
  'static': (
    '░█▀▄░█░█░█▀▀░▀█▀░█▀▀░█▀▄░█',
    '░█▀▄░█░█░▀▀█░░█░░█▀▀░█░█░▀',
    '░▀▀░░▀▀▀░▀▀▀░░▀░░▀▀▀░▀▀░░▀'  
  )
}

pause_title = {
  'static': (
    '░█▀▄░█▀█░█▀█░█░█░░░█░█░█▀▀░▀█▀░█▀▀░▀█▀',
    '░█▀▄░█▀█░█░█░█▀▄░░░█▀█░█▀▀░░█░░▀▀█░░█░',
    '░▀▀░░▀░▀░▀░▀░▀░▀░░░▀░▀░▀▀▀░▀▀▀░▀▀▀░░▀░'
  )
}

pause_button_resume = {
  'static': (
    '     [↑] / [↓]   to select       [X]   to confirm    ',
    '                                                     ',
    '                                                     ',
    '              ┲━━━━━━━━━━━━━━━━━━━━━━━┱              ',
    '     ──────══╡┃      R E S U M E      ┃╞══──────     ',
    '              ┺━━━━━━━━━━━━━━━━━━━━━━━┹              ',
    '                                                     '
  ),
  'hover': (
    '     [↑] / [↓]   to select       [X]   to confirm    ',
    '                                                     ',
    '                  ╒═══════╧═══════╕                  ',
    '              ┲═══════════════════════┱              ',
    '───────────══╡┃      R E S U M E      ┃╞══───────────',
    '              ┺═══════════════════════┹              ',
    '                  ╘═══════╤═══════╛                    '
  )
}

pause_button_retry = {
  'static': (
    '                                                     ',
    '              ┲━━━━━━━━━━━━━━━━━━━━━━━┱              ',
    '     ──────══╡┃       R E T R Y       ┃╞══──────     ',
    '              ┺━━━━━━━━━━━━━━━━━━━━━━━┹              ',
    '                                                     '
  ),
  'hover': (
    '                  ╒═══════╧═══════╕                  ',
    '              ┲═══════════════════════┱              ',
    '───────────══╡┃       R E T R Y       ┃╞══───────────',
    '              ┺═══════════════════════┹              ',
    '                  ╘═══════╤═══════╛                    '
  )
}

pause_button_quit = {
  'static': (
    '                                                     ',
    '              ┲━━━━━━━━━━━━━━━━━━━━━━━┱              ',
    '         ──══╡┃   M A I N   M E N U   ┃╞══──         ',
    '              ┺━━━━━━━━━━━━━━━━━━━━━━━┹              ',
    '                                                     '
  ),
  'hover': (
    '                  ╒═══════╧═══════╕                  ',
    '              ┲═══════════════════════┱              ',
    '     ──────══╡┃   M A I N   M E N U   ┃╞══──────     ',
    '              ┺═══════════════════════┹              ',
    '                  ╘═══════╤═══════╛                  '
  )
}

level_button_tutorial = {
  'static': (
    '     [↑] / [↓]   to select       [X]   to confirm    ',
    '',
    '                                                     ',
    '              ┲━━━━━━━━━━━━━━━━━━━━━━━┱              ',
    '         ──══╡┃    T U T O R I A L    ┃╞══──         ',
    '              ┺━━━━━━━━━━━━━━━━━━━━━━━┹              ',
    '                                                     '
  ),
  'hover': (
    '     [↑] / [↓]   to select       [X]   to confirm    ',
    '',
    '                  ╒═══════╧═══════╕                  ',
    '              ┲═══════════════════════┱              ',
    '     ──────══╡┃    T U T O R I A L    ┃╞══──────     ',
    '              ┺═══════════════════════┹              ',
    '                  ╘═══════╤═══════╛                    '
  )
}

level_button_quit = {
  'static': (
    '                                                     ',
    '              ┲━━━━━━━━━━━━━━━━━━━━━━━┱              ',
    '     ──────══╡┃        Q U I T        ┃╞══──────     ',
    '              ┺━━━━━━━━━━━━━━━━━━━━━━━┹              ',
    '                                                     '
   
  ),
  'hover': (
    '                  ╒═══════╧═══════╕                  ',
    '              ┲═══════════════════════┱              ',
    '───────────══╡┃        Q U I T        ┃╞══───────────',
    '              ┺═══════════════════════┹              ',
    '                  ╘═══════╤═══════╛                  '
    
  )
}

level_button_1 = {
  'static': (
    '                                                               ',
    '              ┲━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┱              ',
    '     ──────══╡┃          L E V E L  1           ┃╞══──────     ',
    '              ┺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┹              ',
    '                                                               '
  ),
  'hover': (
    '                       ╒═══════╧═══════╕                       ',
    '              ┲═════════════════════════════════┱              ',
    '───────────══╡┃          L E V E L  1           ┃╞══───────────',
    '              ┺═════════════════════════════════┹              ',
    '                       ╘═══════╤═══════╛                       '
  )
}

level_button_2 = {
  'static': (
    '                                                               ',
    '              ┲━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┱              ',
    '     ──────══╡┃          L E V E L  2           ┃╞══──────     ',
    '              ┺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┹              ',
    '                                                               '
  ),
  'hover': (
    '                       ╒═══════╧═══════╕                       ',
    '              ┲═════════════════════════════════┱              ',
    '───────────══╡┃          L E V E L  2           ┃╞══───────────',
    '              ┺═════════════════════════════════┹              ',
    '                       ╘═══════╤═══════╛                       '
  )
}

level_button_3 = {
  'static': (
    '                                                               ',
    '              ┲━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┱              ',
    '     ──────══╡┃          L E V E L  3           ┃╞══──────     ',
    '              ┺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┹              ',
    '                                                               '
  ),
  'hover': (
    '                       ╒═══════╧═══════╕                       ',
    '              ┲═════════════════════════════════┱              ',
    '───────────══╡┃          L E V E L  3           ┃╞══───────────',
    '              ┺═════════════════════════════════┹              ',
    '                       ╘═══════╤═══════╛                       '
  )
}

player = {
  'right': (
    '█████',
    '██0█0',
    '█████'
  ),
  'left': (
    '█████',
    '0█0██',
    '█████'
  ),
  'up': (
    '█████',
    '█████',
    '█████'
  ),
  'down': (
    '█████',
    '█0█0█',
    '█████'
  )
}

patroller = {
  'right': (
    '▜██*▛',
    '██Ò█Ó',
    '█████'
  ),
  'left': (
    '▜*██▛',
    'Ò█Ó██',
    '█████'
  ),
  'up': (
    '▜███▛',
    '█████',
    '█████'
  ),
  'down': (
    '▜█*█▛',
    '█Ò█Ó█',
    '█████'
  )
}

safe = {
  'closed': (
    '╔═─═╗',
    '│ $ │',
    '╚═─═╝'
  ),
  'open': (
    ' ╌╌╌┐',
    '╎   ╎',
    '└╌╌╌ '
  )
}

exit = {
  'static': (
    '╔═══\\',
    '║ 🢂  ',
    '╚═══/'
  )
}

door = {
  'closed': (
    '║║',
    '╘╛', 
    '🔒 ',
    '╒╕',
    '║║'
  ),
  'open': (
    '╘╛',
    '  ',
    '  ',
    '  ',
    '╒╕'
  ),
  'interacted': (
    '╘╛',
    '  ',
    '  ',
    '  ',
    '╒╕'
  )
}

hatch = {
  'closed': (
    '══════╾🔒╼═',
  ),
  'open': (
    '═╾       ╼═',
  ),
  'interacted': (
    '═╾       ╼═',
  )
}

camera = {
  'clear_right': (
    '◩◁',
  ),
  'seen_right': (
    '▧⯇',
  ),
  'broken_right': (
    '░░ ',
  ),
  'clear_left': (
    '▷◩',
  ),
  'seen_left': (
    '▶▧',
  ),
  'broken_left': (
    ' ░░',
  ),
  'clear_up': (
    '▽',
    '◩'
  ),
  'seen_up': (
    '▼',
    '▧'
  ),
  'broken_up': (
    ' ',
    '░░'
  ),
  'clear_down': (
    '◩',
    '△'
  ),
  'seen_down': (
    '▧',
    '▲'
  ),
  'broken_down': (
    '░░',
    ' '
  )
}
